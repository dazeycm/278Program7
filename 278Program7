	.data
msg1:	.asciiz "What is your name?"
msg2:	.asciiz "When where you born?"
msg3:	.asciiz "Who is your father?"
msg4:	.asciiz "Are you still alive?"
msg5:	.asciiz "Are you a ghost?"

anw1:	.asciiz "My name is ENIAC"
anw2:	.asciiz "I was born in 1946"
anw3:	.asciiz "My father is Professor Mauchly"
anw4:	.asciiz "No, I died in 1955"
anw5:	.asciiz "...what do you think?"

	.text
main: 
	sub $sp, $sp, 500
	sw $fp, 0($sp)
	sw $ra, 4($sp)
	add $fp, $sp, 496
	
	li $t8, 0xffff0000	#control register
	li $t9, 0xffff0004	#what we're reading in
	li $t7, 0x2		#load in value of 2
	sw $t7, 0($t8)		#store value in control register - we're ready to read in keyboard
	
	addi $t0, $sp, 6	#set place in memory to store user input
	
beforeLoop:
	addi $t0, $sp, 6	#set place in memory to store user input
	
loop:	
	
	beq $t8, 0xA, newLineEntered	#idle loop, waiting for new line to be entered
	j loop

newLineEntered:
	
	
	#while (input is not /n)
	#	keep reading input
	#
	#compare it to each string
	#if (input is same as a msg question)
	#	print answer
	
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 500
	
	.ktext 0x80000180
	li $t9, 0xffff0004
	lb $t8, ($t9)
	sb $t8, ($t0)		#store keyboard input into stack
	addi $t0, $t0, 1	#increase place in stack
	
	mfc0 $k0,$14   # Coprocessor 0 register $14 has address of trapping instruction
  	#addi $k0,$k0,4 # Add 4 to point to next instruction
  	mtc0 $k0,$14   # Store new address back into $14
   	eret           # Error return; set PC to value in $14


